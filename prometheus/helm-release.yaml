apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: prometheus-stack
  namespace: monitoring
spec:
  interval: 30m
  timeout: 15m
  releaseName: prometheus-stack
  chart:
    spec:
      chart: kube-prometheus-stack
      version: "51.3.0"
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
        namespace: monitoring
      interval: 12h
  install:
    createNamespace: false
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    # Prometheus設定
    prometheus:
      prometheusSpec:
        # データ保持期間
        retention: 30d
        # ストレージサイズ
        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: default
              accessModes: ["ReadWriteOnce"]
              resources:
                requests:
                  storage: 10Gi
        # リソース制限
        resources:
          limits:
            cpu: 1000m
            memory: 2Gi
          requests:
            cpu: 500m
            memory: 1Gi
        # セキュリティコンテキスト
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          fsGroup: 2000
        # 追加スクレイプ設定
        additionalScrapeConfigs: []
        
      # Ingress設定（必要に応じて有効化）
      ingress:
        enabled: false
        annotations: {}
        hosts: []
        tls: []
      
      # Service設定
      service:
        type: ClusterIP
        port: 9090

    # Grafana設定
    grafana:
      enabled: true
      adminPassword: "admin123"
      
      # PVC設定
      persistence:
        enabled: true
        storageClassName: default
        size: 5Gi
        accessModes:
          - ReadWriteOnce
      
      # Grafana Ingress設定
      ingress:
        enabled: false
        annotations: {}
        hosts: []
        tls: []
      
      # リソース制限
      resources:
        limits:
          cpu: 500m
          memory: 1Gi
        requests:
          cpu: 250m
          memory: 512Mi
      
      # デフォルトダッシュボード
      defaultDashboardsEnabled: true
      
      # 追加データソース
      additionalDataSources: []
      
      # 環境変数
      env:
        GF_SECURITY_ADMIN_PASSWORD: admin123
        GF_USERS_ALLOW_SIGN_UP: false

    # AlertManager設定
    alertmanager:
      enabled: true
      alertmanagerSpec:
        # ストレージ設定
        storage:
          volumeClaimTemplate:
            spec:
              storageClassName: default
              accessModes: ["ReadWriteOnce"]
              resources:
                requests:
                  storage: 2Gi
        
        # リソース制限
        resources:
          limits:
            cpu: 200m
            memory: 256Mi
          requests:
            cpu: 100m
            memory: 128Mi
      
      # Ingress設定
      ingress:
        enabled: false
        annotations: {}
        hosts: []
        tls: []
      
      # 設定ファイル
      config:
        global:
          smtp_smarthost: 'localhost:587'
          smtp_from: 'alertmanager@example.com'
        route:
          group_by: ['alertname']
          group_wait: 10s
          group_interval: 10s
          repeat_interval: 1h
          receiver: 'web.hook'
        receivers:
          - name: 'web.hook'
            webhook_configs:
              - url: 'http://127.0.0.1:5001/'

    # Node Exporter設定
    nodeExporter:
      enabled: true
      # すべてのノードにデプロイ
      hostRootFsMount:
        enabled: true
        mountPropagation: HostToContainer

    # kube-state-metrics設定
    kubeStateMetrics:
      enabled: true

    # CoreDNS監視
    coreDns:
      enabled: true

    # etcd監視
    kubeEtcd:
      enabled: true

    # kube-controller-manager監視
    kubeControllerManager:
      enabled: true

    # kube-proxy監視
    kubeProxy:
      enabled: true

    # kube-scheduler監視
    kubeScheduler:
      enabled: true

    # kubelet監視
    kubelet:
      enabled: true 
